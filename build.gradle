import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
  dependencies {
    classpath libs.kotlin.gradlePlugin
    classpath libs.mavenPublishPlugin
    classpath libs.spotlessPlugin
    classpath libs.animalSnifferPlugin
  }
  repositories {
    mavenCentral()
  }
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'ru.vyarus.animalsniffer'

kotlin {
  jvm()

  sourceSets {
    commonTest {
      dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-test'
      }
    }
  }
}

tasks.withType(KotlinCompile).configureEach {
  compilerOptions {
    jvmTarget = JvmTarget.JVM_1_8
    freeCompilerArgs.addAll([
      '-progressive',
      '-Xjvm-default=all',
    ])
  }
}

tasks.withType(JavaCompile).configureEach {
  sourceCompatibility = JavaVersion.VERSION_1_8.toString()
  targetCompatibility = JavaVersion.VERSION_1_8.toString()
}

spotless {
  kotlin {
    ktlint(libs.ktlint.get().version)
      .editorConfigOverride([
        // Making something an expression body should be a choice around readability.
        'ktlint_standard_function-expression-body': 'disabled',
      ])
    target 'src/**/*.kt'
  }
}

dependencies {
  signature 'org.codehaus.mojo.signature:java18:1.0@signature'
  signature 'net.sf.androidscents.signature:android-api-level-21:5.0.1_r2@signature'
}
